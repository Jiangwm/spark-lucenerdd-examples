{
  "paragraphs": [
    {
      "text": "%dep\nz.addRepo(\"Spark Packages Repo\").url(\"http://dl.bintray.com/spark-packages/maven\")\nz.addRepo(\"OSS SNAPSHOTS\").url(\"https://oss.sonatype.org/content/repositories/snapshots\")\nz.load(\"org.zouzias:spark-lucenerdd_2.11:0.2.2-SNAPSHOT\")",
      "dateUpdated": "Oct 16, 2016 8:46:08 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475690150553_-1276120470",
      "id": "20161005-175550_494955961",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Must be used before SparkInterpreter (%spark) initialized\nHint: put this paragraph before any Spark code and restart Zeppelin/Interpreter"
      },
      "dateCreated": "Oct 5, 2016 5:55:50 AM",
      "dateStarted": "Oct 16, 2016 8:46:08 PM",
      "dateFinished": "Oct 16, 2016 8:46:08 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "ShapeLuceneRDD imports",
      "text": "import org.apache.spark.sql.SparkSession\nimport org.apache.spark.SparkConf\nimport org.zouzias.spark.lucenerdd.spatial.shape.ShapeLuceneRDD\nimport org.zouzias.spark.lucenerdd.spatial.shape._\nimport org.zouzias.spark.lucenerdd._",
      "dateUpdated": "Oct 16, 2016 8:50:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475690218448_1320488560",
      "id": "20161005-175658_813862107",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.SparkConf\n\nimport org.zouzias.spark.lucenerdd.spatial.shape.ShapeLuceneRDD\n\nimport org.zouzias.spark.lucenerdd.spatial.shape._\n\nimport org.zouzias.spark.lucenerdd._\n"
      },
      "dateCreated": "Oct 5, 2016 5:56:58 AM",
      "dateStarted": "Oct 16, 2016 8:46:08 PM",
      "dateFinished": "Oct 16, 2016 8:46:09 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load all countries and all capitals",
      "text": " // Load all countries\nval allCountries \u003d spark.read.parquet(\"data/spatial/countries-poly.parquet\").select(\"name\", \"shape\").map(row \u003d\u003e (row.getString(1), row.getString(0)))\n\n// Load all capitals\nval capitals \u003d spark.read.parquet(\"data/spatial/capitals.parquet\").select(\"name\", \"shape\").map(row \u003d\u003e (row.getString(1), row.getString(0)))\n\n// Define ShapeLuceneRDD\nval shapes \u003d ShapeLuceneRDD(allCountries)\nshapes.cache",
      "dateUpdated": "Oct 16, 2016 8:51:07 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475690357892_1075234945",
      "id": "20161005-175917_1541464701",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nallCountries: org.apache.spark.sql.Dataset[(String, String)] \u003d [_1: string, _2: string]\n\ncapitals: org.apache.spark.sql.Dataset[(String, String)] \u003d [_1: string, _2: string]\n\nshapes: org.zouzias.spark.lucenerdd.spatial.shape.ShapeLuceneRDD[String,String] \u003d ShapeLuceneRDD[28] at RDD at ShapeLuceneRDD.scala:45\n\nres6: shapes.type \u003d ShapeLuceneRDD[28] at RDD at ShapeLuceneRDD.scala:45\n"
      },
      "dateCreated": "Oct 5, 2016 5:59:17 AM",
      "dateStarted": "Oct 16, 2016 8:46:08 PM",
      "dateFinished": "Oct 16, 2016 8:47:18 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def coords(pointAndName: (String, String)): (Double, Double) \u003d {\n    def parseDouble(s: String): Double \u003d try { s.toDouble } catch { case _: Throwable \u003d\u003e 0.0 }\n    val str \u003d pointAndName._1\n    val coords \u003d str.dropWhile(x \u003d\u003e x.compareTo(\u0027(\u0027) !\u003d 0).drop(1).dropRight(1).split(\" \").map(_.trim) // Convert \u0027POINT(x,y)\u0027 to Array[Double]\n    (parseDouble(coords(0)), parseDouble(coords(1)))\n}",
      "dateUpdated": "Oct 16, 2016 8:54:04 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475690470085_434046461",
      "id": "20161005-180110_847843204",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ncoords: (pointAndName: (String, String))(Double, Double)\n"
      },
      "dateCreated": "Oct 5, 2016 6:01:10 AM",
      "dateStarted": "Oct 16, 2016 8:54:04 PM",
      "dateFinished": "Oct 16, 2016 8:54:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// Radius in km\nval Radius \u003d 20\n// Link by radius\nval linked \u003d shapes.linkByRadius(capitals.rdd, coords, Radius)\nlinked.cache\nlinked.count\n\nlinked.map(x \u003d\u003e (x._1, x._2.map(_.doc.textField(\"_1\")))).take(100).foreach(println)\n",
      "dateUpdated": "Oct 16, 2016 8:54:06 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 231.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475703139298_987995550",
      "id": "20161005-213219_809764400",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nRadius: Int \u003d 20\n\nlinked: org.apache.spark.rdd.RDD[((String, String), List[org.zouzias.spark.lucenerdd.models.SparkScoreDoc])] \u003d MapPartitionsRDD[92] at map at ShapeLuceneRDD.scala:119\n\nres21: linked.type \u003d MapPartitionsRDD[92] at map at ShapeLuceneRDD.scala:119\n\nres22: Long \u003d 303\n((POINT (-159.7708145 -21.2074736),Avarua),List(Some(Cook Is.)))\n((POINT (53.0068636 67.6379965),Нарьян-Мар),List())\n((POINT (-0.1276474 51.5073219),London),List(Some(United Kingdom)))\n((POINT (35.9208284 56.858675),Тверь),List())\n((POINT (27.5158544 40.9795272),Tekirdağ),List(Some(Turkey)))\n((POINT (18.3886246 43.8515421),Sarajevo),List(Some(Bosnia \u0026 Herzegovina)))\n((POINT (86.08723190000001 55.3551248),Кемерово),List())\n((POINT (113.7021665 -8.168774300000001),Jember),List(Some(Indonesia)))\n((POINT (112.4155881 -7.1204411),Lamongan),List(Some(Indonesia)))\n((POINT (32.853758 39.9220794),Ankara),List(Some(Turkey)))\n((POINT (112.906694 -7.6419894),Pasuruan),List(Some(Indonesia)))\n((POINT (31.144663 -26.3257447),Mbabane),List(Some(Swaziland), Some(South Africa)))\n((POINT (110.4229455 -6.9904038),Semarang),List(Some(Indonesia)))\n((POINT (23.7279843 37.9841493),Αθήνα),List(Some(Greece)))\n((POINT (19.0404707 47.4983815),Budapest),List(Some(Hungary)))\n((POINT (39.5936899 52.6041877),Липецк),List())\n((POINT (-61.5180297 10.6572142),Port of Spain),List(Some(Trinidad \u0026 Tobago)))\n((POINT (111.5168525 -7.6290949),Madiun),List(Some(Indonesia)))\n((POINT (46.0346846 51.530018),Саратов),List())\n((POINT (38.9757116 45.0354329),Краснодар),List())\n((POINT (44.0072897 56.3278821),Нижний Новгород),List())\n((POINT (47.5255809 -18.9100122),Antananarivo),List(Some(Madagascar)))\n((POINT (103.852038 1.2904527),Singapore),List(Some(Indonesia), Some(Singapore), Some(Malaysia)))\n((POINT (15.0502758 12.1191543),N’Djamena نجامينا),List(Some(Chad), Some(Cameroon)))\n((POINT (121.5637 25.0375167),臺北市),List(Some(China)))\n((POINT (158.646409 53.0238414),Петропавловск-Камчатский),List())\n((POINT (-23.5096132 14.9160169),Praia),List(Some(Cape Verde)))\n((POINT (-77.3383331 25.0783456),Nassau),List(Some(The Bahamas)))\n((POINT (-59.618848 13.1018264),Bridgetown),List(Some(Barbados)))\n((POINT (57.2124606 50.2796448),Актобе),List(Some(Kazakhstan)))\n((POINT (31.2436663 30.0488185),القاهرة),List(Some(Egypt)))\n((POINT (-16.5756457 13.4553495),Banjul),List(Some(The Gambia), Some(Senegal)))\n((POINT (79.8532704 6.934287),Colombo),List(Some(Sri Lanka)))\n((POINT (12.4830718 41.8933439),Roma),List(Some(Vatican City), Some(Italy)))\n((POINT (84.9523238 56.4885921),Томск),List())\n((POINT (-13.2680158 8.4790017),Freetown),List(Some(Sierra Leone)))\n((POINT (24.9435079 60.1666277),Helsinki),List(Some(Finland)))\n((POINT (10.7391112 59.9132694),Oslo),List(Some(Norway)))\n((POINT (131.8854009 43.1152835),Владивосток),List())\n((POINT (14.5134889 35.8987546),Valletta),List(Some(Malta)))\n((POINT (7.4514512 46.9482713),Bern),List(Some(Switzerland)))\n((POINT (28.2813812 -15.4166967),Lusaka),List(Some(Zambia)))\n((POINT (4.3516841 50.8465406),Bruxelles - Brussel),List(Some(Belgium)))\n((POINT (114.9417574 4.8895453),Bandar Seri Begawan),List(Some(Malaysia), Some(Brunei)))\n((POINT (20.5105166 54.7066422),Калининград),List())\n((POINT (94.4233254 51.7067151),Кызыл),List())\n((POINT (113.5008922 52.0334094),Чита),List())\n((POINT (44.5168022 48.7106765),Волгоград),List())\n((POINT (149.128894 -35.2819367),Canberra),List(Some(Australia)))\n((POINT (-72.33959280000001 18.547327),Port-au-Prince),List(Some(Haiti)))\n((POINT (112.6559633 -7.1571614),Gresik),List(Some(Indonesia)))\n((POINT (-8.0000014 12.6500083),Bamako),List(Some(Mali)))\n((POINT (82.9234476 55.0282215),Новосибирск),List())\n((POINT (11.5213344 3.8689867),Yaoundé),List(Some(Cameroon)))\n((POINT (51.4214589 35.6865107),تهران),List(Some(Iran)))\n((POINT (-47.8822933 -15.7934003),Brasília),List(Some(Brazil)))\n((POINT (19.8185323 41.3279457),Tirana),List(Some(Albania)))\n((POINT (53.2094166 56.866557),Ижевск),List())\n((POINT (109.1378833 -6.8673767),Tegal),List(Some(Indonesia)))\n((POINT (34.3663917 53.2423553),Брянск),List())\n((POINT (20.4568089 44.8178787),Београд),List(Some(Serbia \u0026 Montenegro)))\n((POINT (132.9282082 48.7881668),Биробиджан),List())\n((POINT (25.2853984 54.6843135),Vilnius),List(Some(Lithuania)))\n((POINT (-66.91460170000001 10.506098),Caracas),List(Some(Venezuela)))\n((POINT (-69.942111 18.4801972),Santo Domingo),List(Some(Dominican Republic)))\n((POINT (29.6349435 46.8516039),Тирасполь),List(Some(Ukraine), Some(Moldova)))\n((POINT (127.527158 50.2905287),Благовещенск),List(Some(China)))\n((POINT (96.1346412 19.7536048),နေပြည်တော်),List(Some(Myanmar)))\n((POINT (61.4025547 55.1598408),Челябинск),List())\n((POINT (24.1051846 56.9493977),Rīga),List(Some(Latvia)))\n((POINT (44.5125849 40.1776121),Երևան),List(Some(Turkey), Some(Armenia)))\n((POINT (44.2005197 15.342101),صنعاء),List(Some(Yemen)))\n((POINT (73.3714883 54.9913752),Омск),List())\n((POINT (116.3913489 39.9059093),北京市),List(Some(China)))\n((POINT (142.727438 46.9574273),Южно-Сахалинск),List())\n((POINT (40.9737394 56.9984452),Иваново),List())\n((POINT (50.5822436 26.2235041),Manama المنامة),List(Some(Bahrain)))\n((POINT (110.3669652 -7.7829297),Yogyakarta),List(Some(Indonesia)))\n((POINT (-56.1913569 -34.9059039),Montevideo),List(Some(Uruguay)))\n((POINT (44.2701877 46.3069981),Элиста),List())\n((POINT (9.4540009 0.3900022),Libreville),List(Some(Gabon)))\n((POINT (45.1838307 54.1867088),Саранск),List())\n((POINT (36.2598115 54.5101087),Калуга),List())\n((POINT (47.2454815 56.1311738),Чебоксары),List())\n((POINT (77.21595619999999 28.6138967),New Delhi),List(Some(India)))\n((POINT (106.9177016 47.9184676),Улаанбаатар),List(Some(Mongolia)))\n((POINT (16.3725042 48.2083537),Wien),List(Some(Austria)))\n((POINT (54.3705762 24.4747961),Abu Dhabi),List(Some(United Arab Emirates)))\n((POINT (3.0600655 36.775348),Alger الجزائر),List(Some(Algeria)))\n((POINT (65.3218732 55.4543487),Курган),List())\n((POINT (107.583657 51.8357478),Улан-Удэ),List())\n((POINT (41.6360085 41.6509502),ბათუმი (Batumi)),List(Some(Turkey), Some(Georgia)))\n((POINT (-10.7977882 6.3280343),Monrovia),List(Some(Liberia)))\n((POINT (38.9326725 15.3389974),Asmara),List(Some(Eritrea)))\n((POINT (-58.1628612 6.8025766),Georgetown),List(Some(Guyana)))\n((POINT (53.058569 36.5658725),ساری),List(Some(Iran)))\n((POINT (33.0749718 68.9706637),Мурманск),List())\n((POINT (111.3281197 -7.6560219),Magetan),List(Some(Indonesia)))\n((POINT (171.3816354 7.0909924),Majuro),List(Some(Marshall Is.)))\n((POINT (44.8014979 41.693435),თბილისი (Tbilisi)),List(Some(Georgia)))\n"
      },
      "dateCreated": "Oct 5, 2016 9:32:19 AM",
      "dateStarted": "Oct 16, 2016 8:54:06 PM",
      "dateFinished": "Oct 16, 2016 8:54:09 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Oct 16, 2016 8:46:08 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475703273500_1685312154",
      "id": "20161005-213433_1705431143",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Oct 5, 2016 9:34:33 AM",
      "dateStarted": "Oct 16, 2016 8:47:19 PM",
      "dateFinished": "Oct 16, 2016 8:48:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "/lucenerdd/spatial/linkage-countries-vs-cities",
  "id": "2BYG28DT7",
  "angularObjects": {
    "2BYMQMQA1:shared_process": [],
    "2BZPBT6SA:shared_process": [],
    "2BYWVEWBV:shared_process": [],
    "2C1H6QZ1V:shared_process": [],
    "2C233GK7P:shared_process": [],
    "2BY6J95BK:shared_process": [],
    "2C1Z583CU:shared_process": [],
    "2BXV4911Z:shared_process": [],
    "2BZJN132B:shared_process": []
  },
  "config": {},
  "info": {}
}