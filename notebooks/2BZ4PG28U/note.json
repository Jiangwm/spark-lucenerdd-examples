{
  "paragraphs": [
    {
      "title": "Load Spark LuceneRDD Jars",
      "text": "%dep\nz.addRepo(\"Spark Packages Repo\").url(\"http://dl.bintray.com/spark-packages/maven\")\nz.addRepo(\"OSS SNAPSHOTS\").url(\"https://oss.sonatype.org/content/repositories/snapshots\")\nz.load(\"org.zouzias:spark-lucenerdd_2.11:0.2.3-SNAPSHOT\")",
      "dateUpdated": "Oct 21, 2016 9:00:29 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475350680699_-1674609895",
      "id": "20161001-115642_482200633",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Must be used before SparkInterpreter (%spark) initialized\nHint: put this paragraph before any Spark code and restart Zeppelin/Interpreter"
      },
      "dateCreated": "Oct 1, 2016 7:38:00 AM",
      "dateStarted": "Oct 21, 2016 9:00:29 PM",
      "dateFinished": "Oct 21, 2016 9:00:29 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Imports for LuceneRDD",
      "text": "%spark\nimport org.apache.spark.SparkConf\nimport org.apache.spark.sql.{Row, SparkSession}\nimport org.zouzias.spark.lucenerdd.LuceneRDD\nimport org.zouzias.spark.lucenerdd._\nimport org.zouzias.spark.lucenerdd.logging.Logging\n",
      "dateUpdated": "Oct 21, 2016 9:00:29 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475350680710_-1592658380",
      "id": "20161001-120020_440303718",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport org.apache.spark.SparkConf\n\nimport org.apache.spark.sql.{Row, SparkSession}\n\nimport org.zouzias.spark.lucenerdd.LuceneRDD\n\nimport org.zouzias.spark.lucenerdd._\n\nimport org.zouzias.spark.lucenerdd.logging.Logging\n"
      },
      "dateCreated": "Oct 1, 2016 7:38:00 AM",
      "dateStarted": "Oct 21, 2016 9:00:30 PM",
      "dateFinished": "Oct 21, 2016 9:00:32 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Load ACM and DBLP datasets",
      "text": "import spark.implicits._\n\n// ACM\nval acmDF \u003d spark.read.parquet(\"data/linkage-papers2/linkage-papers-acm.parquet\")\nprintln(s\"Loaded ${acmDF.count} ACM records\")\nacmDF.cache()\nacmDF.printSchema()\n\n// DBLP\nval dblp2DF \u003d spark.read.parquet(\"data/linkage-papers2/linkage-papers-dblp2.parquet\")\nprintln(s\"Loaded ${acmDF.count} DBLP records\")\n\n// Ground truth DataFrame\nval groundTruthDF \u003d spark.read.parquet(\"data/linkage-papers2/linkage-papers-acm-vs-dblp2.parquet\")\n\n// DBLP LuceneRDD\nval dblp2 \u003d LuceneRDD(dblp2DF)\ndblp2.cache()\ndblp2.fields()",
      "dateUpdated": "Oct 21, 2016 9:06:19 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475350680712_-1594966873",
      "id": "20161001-120320_2078137697",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport spark.implicits._\n\nacmDF: org.apache.spark.sql.DataFrame \u003d [id: int, title: string ... 3 more fields]\nLoaded 2294 ACM records\n\nres8: acmDF.type \u003d [id: int, title: string ... 3 more fields]\nroot\n |-- id: integer (nullable \u003d true)\n |-- title: string (nullable \u003d true)\n |-- authors: string (nullable \u003d true)\n |-- venue: string (nullable \u003d true)\n |-- year: integer (nullable \u003d true)\n\n\ndblp2DF: org.apache.spark.sql.DataFrame \u003d [id: string, title: string ... 3 more fields]\nLoaded 2294 DBLP records\n\ngroundTruthDF: org.apache.spark.sql.DataFrame \u003d [idDBLP: string, idACM: int]\n\ndblp2: org.zouzias.spark.lucenerdd.LuceneRDD[org.apache.spark.sql.Row] \u003d LuceneRDD[47] at RDD at LuceneRDD.scala:40\n\nres11: dblp2.type \u003d LuceneRDD[47] at RDD at LuceneRDD.scala:40\n\nres12: Set[String] \u003d Set(year, id, authors, title, venue)\n"
      },
      "dateCreated": "Oct 1, 2016 7:38:00 AM",
      "dateStarted": "Oct 21, 2016 9:00:30 PM",
      "dateFinished": "Oct 21, 2016 9:00:39 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Register tables for visualization",
      "text": "acmDF.registerTempTable(\"acm\")\ndblp2DF.registerTempTable(\"dblp\")",
      "dateUpdated": "Oct 21, 2016 9:00:30 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1476792709323_-1512020199",
      "id": "20161018-121149_1501647868",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nwarning: there was one deprecation warning; re-run with -deprecation for details\n\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
      },
      "dateCreated": "Oct 18, 2016 12:11:49 PM",
      "dateStarted": "Oct 21, 2016 9:00:33 PM",
      "dateFinished": "Oct 21, 2016 9:00:40 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "ACM Papers",
      "text": "%sql\nselect title, authors, venue, year, id FROM acm limit 10",
      "dateUpdated": "Oct 21, 2016 9:00:30 PM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "helium": {},
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1476792941795_1780446349",
      "id": "20161018-121541_1139402059",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "title\tauthors\tvenue\tyear\tid\nSpatial and temporal content-based access to hypervideo databases\tHaitao Jiang, Ahmed K. Elmagarmid\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1998\t765538\nOptimal clip ordering for multi-clip queries\tRaymond T. Ng, Paul Shum\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1998\t765539\nIntegrating symbolic images into a multimedia database system using classification and abstraction approaches\tAya Soffer, Hanan Samet\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1998\t765540\nApproximate similarity retrieval with M-trees\tPavel Zezula, Pasquale Savino, Giuseppe Amato, Fausto Rabitti\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1998\t765541\nDelivering presentations from multimedia servers\tNevzat Hurkan Balkir, Gultekin Ozsoyoglu\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1998\t765542\nThe hB $^\\\\Pi$-tree: a multi-attribute index supporting concurrency, recovery and node consolidation\tGeorgios Evangelidis, David Lomet, Betty Salzberg\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1997\t765544\nDictionary-based order-preserving string compression\tGennady Antoshenkov\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1997\t765545\nA logical view of structured files\tSerge Abiteboul, Sophie Cluet, Tova Milo\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1998\t765527\nFast image retrieval using color-spatial information\tBeng Chin Ooi, Kian-Lee Tan, Tat Seng Chua, Wynne Hsu\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1998\t765528\nGuest Editorial\tMatthias Jarke\tThe VLDB Journal \u0026mdash; The International Journal on Very Large Data Bases \t1998\t765530\n"
      },
      "dateCreated": "Oct 18, 2016 12:15:41 PM",
      "dateStarted": "Oct 21, 2016 9:00:39 PM",
      "dateFinished": "Oct 21, 2016 9:00:41 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "DBLP papers",
      "text": "%sql\nselect title, authors, venue, year, id FROM dblp limit 10",
      "dateUpdated": "Oct 21, 2016 9:00:30 PM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "title",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "authors",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "title",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "authors",
              "index": 1.0,
              "aggr": "sum"
            }
          },
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "title": true,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1476793006890_1637948050",
      "id": "20161018-121646_135219171",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "title\tauthors\tvenue\tyear\tid\nEfficient Algorithms for Mining Outliers from Large Data Sets\tKyuseok Shim, Sridhar Ramaswamy, Rajeev Rastogi\tSIGMOD Conference\t2000\tconf/sigmod/RamaswamyRS00\nMaintenance of Data Cubes and Summary Tables in a Warehouse\tInderpal Singh Mumick, Dallan Quass, Barinderpal Singh Mumick\tSIGMOD Conference\t1997\tconf/sigmod/MumickQM97\nHistorical Queries Along Multiple Lines of Time Evolution\tVassilis J. Tsotras, Gad M. Landau, Jeanette P. Schmidt\tVLDB J.\t1995\tjournals/vldb/LandauST95\nThe Impact of Database Research on Industrial Products (Panel Summary)\tDavid B. Lomet, Daniel Barbar�, Jos� A. Blakeley, Michael Stonebraker, Daniel H. Fishman\tSIGMOD Record\t1994\tjournals/sigmod/BarbaraBFLS94\nXQuery: A Query Language for XML\tDonald D. Chamberlin\tSIGMOD Conference\t2003\tconf/sigmod/Chamberlin03\nThe ClustRa Telecom Database: High Availability, High Throughput, and Real-Time Response\tSvein-Olaf Hvasshovd, �ystein Torbj�rnsen, Svein Erik Bratsberg, Per Holager\tVLDB\t1995\tconf/vldb/HvasshovdTBH95\nEfficient Processing of Joins on Set-valued Attributes\tNikos Mamoulis\tSIGMOD Conference\t2003\tconf/sigmod/Mamoulis03\nEvaluating Queries with Generalized Path Expressions\tGuido Moerkotte, Sophie Cluet, Vassilis Christophides\tSIGMOD Conference\t1996\tconf/sigmod/ChristophidesCM96\nTowards an Infrastructure for Temporal Databases: Report of an Invitational ARPA/NSF Workshop\tRamez Elmasri, Richard T. Snodgrass, Babis Theodoulidis, Inderpal Singh Mumick, Arie Segev, M. Tamer �zsu, Umeshwar Dayal, Niki Pissinou, Barbara Pernici\tSIGMOD Record\t1994\tjournals/sigmod/PissinouSEMOPSTD94\nP-Grid: a self-organizing structured P2P system\tZoran Despotovic, Manfred Hauswirth, Karl Aberer, Philippe Cudr�-Mauroux, Magdalena Punceva, Anwitaman Datta, Roman Schmidt\tSIGMOD Record\t2003\tjournals/sigmod/AbererCDDHPS03\n"
      },
      "dateCreated": "Oct 18, 2016 12:16:46 PM",
      "dateStarted": "Oct 21, 2016 9:00:41 PM",
      "dateFinished": "Oct 21, 2016 9:00:42 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\n// Size threshold on the words of *title* field\nval titleThres \u003d z.input(\"title_word_threshold\", 8.0)\n\n// Size threshold of the words on *authors* field\nval authorsThres \u003d z.input(\"authors_word_threshold\", 100.0)\n",
      "dateUpdated": "Oct 21, 2016 9:11:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {
          "titleWordThreshold": "",
          "authorsWorldThreshold": "",
          "title_word_threshold": "3",
          "authors_word_threshold": "3"
        },
        "forms": {
          "title_word_threshold": {
            "name": "title_word_threshold",
            "displayName": "title_word_threshold",
            "type": "input",
            "defaultValue": 8.0,
            "hidden": false
          },
          "authors_word_threshold": {
            "name": "authors_word_threshold",
            "displayName": "authors_word_threshold",
            "type": "input",
            "defaultValue": 100.0,
            "hidden": false
          }
        }
      },
      "apps": [],
      "jobName": "paragraph_1476993517851_-127333029",
      "id": "20161020-195837_359626346",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ntitleThres: Object \u003d 3\n\nauthorsThres: Object \u003d 3\n"
      },
      "dateCreated": "Oct 20, 2016 7:58:37 AM",
      "dateStarted": "Oct 21, 2016 9:11:35 PM",
      "dateFinished": "Oct 21, 2016 9:11:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Define Entity Linkage Function",
      "text": "%spark\n\n// Helper: whitespace split words, keep words \u003e threshold # of chars\ndef tokenizer(s: String, threshold: Int, comb: String \u003d \"OR\"): String \u003d {\n    s.split(\" \").map(_.replaceAll(\"[^a-zA-Z0-9]\", \"\")).filter(_.length \u003e threshold).mkString(s\" ${comb} \")\n}\n   \n///////////////////////////////////////////////////////////////////////////////////////\n// Entity linkage function definition, i.e., how do you want your records to be linked?\n//\n// Input: org.apache.spark.sql.Row\n// Output: Lucene query string as in [query string] (https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html)\n//////////////////////////////////////////////////////////////////////////////////////\nval linker: Row \u003d\u003e String \u003d { case row \u003d\u003e {\n    \n    // Get title and authors fields\n    val title \u003d row.getString(row.fieldIndex(\"title\"))\n    val authors \u003d row.getString(row.fieldIndex(\"authors\"))\n    \n    val titleTokens \u003d tokenizer(title, Integer.parseInt(titleThres.toString)) // Replace 8 with 3\n    val authorsTerms \u003d tokenizer(authors, Integer.parseInt(authorsThres.toString)) // Use 3 to get 0.97 accuracy\n    \n    if (titleTokens.nonEmpty \u0026\u0026 authorsTerms.nonEmpty) {\n        s\"(title:(${titleTokens})) OR (authors:${authorsTerms})\"\n    }\n    else if (titleTokens.nonEmpty){\n        s\"title:(${titleTokens})\"\n    }\n    else if ( authorsTerms.nonEmpty) {\n        s\"(authors:${authorsTerms})\"\n    }\n    else {\n        \"*:*\"\n    }\n  }\n}",
      "dateUpdated": "Oct 21, 2016 9:11:39 PM",
      "config": {
        "colWidth": 7.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 86.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "title": true,
        "lineNumbers": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475350680724_-1587271895",
      "id": "20161001-154952_870995671",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ntokenizer: (s: String, threshold: Int, comb: String)String\n\nlinker: org.apache.spark.sql.Row \u003d\u003e String \u003d \u003cfunction1\u003e\n"
      },
      "dateCreated": "Oct 1, 2016 7:38:00 AM",
      "dateStarted": "Oct 21, 2016 9:11:39 PM",
      "dateFinished": "Oct 21, 2016 9:11:39 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Compute Linkage Accuracy",
      "text": "//////////////////////////////////\n// Entity linkage                /\n//////////////////////////////////\nval linkedResults \u003d dblp2.linkDataFrame(acmDF, linker, 3)\n\n////////////////////////////////////////\n// The rest is for computing accuracy  /\n////////////////////////////////////////\n\n// Linkage Results (get top result)\nval linkageResultsDF \u003d spark.createDataFrame(linkedResults.filter(_._2.nonEmpty).map{ case (acm, topDocs) \u003d\u003e (topDocs.head.doc.textField(\"id\").get, acm.getInt(acm.fieldIndex(\"id\")).toString)}).toDF(\"idDBLP\", \"idACM\")\n\n// Compute the number of currect results based on ground truth\nval correctHits: Double \u003d linkageResultsDF.join(groundTruthDF, groundTruthDF.col(\"idDBLP\").equalTo(linkageResultsDF(\"idDBLP\")) \u0026\u0026  groundTruthDF.col(\"idACM\").equalTo(linkageResultsDF(\"idACM\"))).count\n\n// Total # of ground truth records    \nval total: Double \u003d groundTruthDF.count\n\n// Accuracy\nval accuracy \u003d correctHits / total\n\nprintln(\"********************************\")\nprintln(\"********************************\")\nprintln(s\"Accuracy of linkage is ${accuracy}\")\nprintln(\"********************************\")\nprintln(\"********************************\")",
      "dateUpdated": "Oct 21, 2016 9:11:55 PM",
      "config": {
        "colWidth": 5.0,
        "editorMode": "ace/mode/scala",
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "title": true,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475350680724_-1587271895",
      "id": "20161001-155056_1480917921",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nlinkedResults: org.apache.spark.rdd.RDD[(org.apache.spark.sql.Row, List[org.zouzias.spark.lucenerdd.models.SparkScoreDoc])] \u003d MapPartitionsRDD[238] at map at LuceneRDD.scala:179\n\nlinkageResultsDF: org.apache.spark.sql.DataFrame \u003d [idDBLP: string, idACM: string]\n\ncorrectHits: Double \u003d 2162.0\n\ntotal: Double \u003d 2224.0\n\naccuracy: Double \u003d 0.9721223021582733\n********************************\n********************************\nAccuracy of linkage is 0.9721223021582733\n********************************\n********************************\n"
      },
      "dateCreated": "Oct 1, 2016 7:38:00 AM",
      "dateStarted": "Oct 21, 2016 9:11:40 PM",
      "dateFinished": "Oct 21, 2016 9:11:45 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Output Linkage Results",
      "text": "linkedResults.map(x \u003d\u003e (x._1.getString(1), x._2.headOption.map(_.doc.textField(\"title\")))).sample(false, 0.1).take(20).foreach(println)",
      "dateUpdated": "Oct 21, 2016 9:12:02 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 448.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1475350680725_-1587656644",
      "id": "20161001-155628_1046044654",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "(Optimization Algorithms for Exploiting the Parallelism-Communication Tradeoff in Pipelined Parallelism,Some(Some(Optimization Algorithms for Exploiting the Parallelism-Communication Tradeoff in Pipelined Parallelism)))\n(An Efficient Algorithm for Mining Association Rules in Large Databases,Some(Some(An Efficient Algorithm for Mining Association Rules in Large Databases)))\n(SPARTAN: a model-based semantic compression system for massive data tables,Some(Some(SPARTAN: A Model-Based Semantic Compression System for Massive Data Tables)))\n(Analyzing Quantitative Databases: Image is Everything,Some(Some(Analyzing Quantitative Databases: Image is Everything)))\n(The INCINERATE data model,Some(Some(The INCINERATE Data Model)))\n(In-memory data management for consumer transactions the timesten approach,Some(Some(In-Memory Data Management for Consumer Transactions The Times-Ten Approach)))\n(Improving OLTP data quality using data warehouse mechanisms,Some(Some(Improving OLTP Data Quality Using Data Warehouse Mechanisms)))\n(Efficiently supporting ad hoc queries in large datasets of time sequences,Some(Some(Efficiently Supporting Ad Hoc Queries in Large Datasets of Time Sequences)))\n(SQLJ  Part 1: SQL routines using the Java programming language,Some(Some(SQLJ-Part 1: SQL Routines Using the Java Programming Language)))\n(Replication, consistency, and practicality: are these mutually exclusive?,Some(Some(Replication, Consistency, and Practicality: Are These Mutually Exclusive?)))\n(Index configuration in object-oriented databases,Some(Some(Index Configuration in Object-Oriented Databases)))\n(Microsoft index turning wizard for SQL Server 7.0,Some(Some(Microsoft Index Tuning Wizard for SQL Server 7.0)))\n(A Database System for Real-Time Event Aggregation in Telecommunication,Some(Some(A Database System for Real-Time Event Aggregation in Telecommunication)))\n(TIMBER: a native system for querying XML,Some(Some(TIMBER: A Native System for Querying XML)))\n(D(k)-index: an adaptive structural summary for graph-structured data,Some(Some(D(k)-Index: An Adaptive Structural Summary for Graph-Structured Data)))\n(Indexing of now-relative spatio-bitemporal data,Some(Some(Indexing of now-relative spatio-bitemporal data)))\n(ProbView: a flexible probabilistic database system,Some(Some(ProbView: A Flexible Probabilistic Database System)))\n(Open object database management systems,Some(Some(Open Object Database Management Systems)))\n(Repositories and object oriented databases,Some(Some(Repositories and Object Oriented Databases)))\n(Reports,Some(Some(Semantic Interoperability in Information Services: Experiencing with CoopWARE)))\n"
      },
      "dateCreated": "Oct 1, 2016 7:38:00 AM",
      "dateStarted": "Oct 21, 2016 9:12:02 PM",
      "dateFinished": "Oct 21, 2016 9:12:03 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Oct 21, 2016 9:00:31 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {},
          "map": {
            "baseMapType": "Streets",
            "isOnline": true,
            "pinCols": []
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1476565047816_-86531383",
      "id": "20161015-205727_383127430",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Oct 15, 2016 8:57:27 AM",
      "dateStarted": "Oct 21, 2016 9:00:55 PM",
      "dateFinished": "Oct 21, 2016 9:00:55 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "/lucenerdd/linkage/acm-vs-dblp (ScalaIO)",
  "id": "2BZ4PG28U",
  "angularObjects": {
    "2C146Z915:shared_process": [],
    "2BXFGK4SY:shared_process": [],
    "2BYAYETPV:shared_process": [],
    "2BZCD4GGR:shared_process": [],
    "2BYXMQBZY:shared_process": [],
    "2BYWGTMM8:shared_process": [],
    "2C1D1827H:shared_process": [],
    "2C195RH6B:shared_process": [],
    "2C1N24D8Q:shared_process": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}